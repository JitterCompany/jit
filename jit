#!/usr/bin/env bash


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

CONFIG_FILE="$DIR/config.cfg"
CONFIG_EXAMPLE="$DIR/config.example"

if [ ! -f $CONFIG_FILE ]; then
    cp $CONFIG_EXAMPLE $CONFIG_FILE
    read -p "Please edit your config file! [OK]"
    vim $CONFIG_FILE
fi

. $CONFIG_FILE

if [ ! -d $LOG_DIR ]; then
    echo "Note: directory '$LOG_DIR' does not exist."
    echo "Please create it manually or update the config file"

    exit -2
fi


if [ $# -le 0 ]; then
    echo "Usage '$(basename "$0") <log-name>'"
    echo ""

    echo "Existing logs:"
    ls "$LOG_DIR" | cat | grep "\.md$" | sed "s/^[0-9]*-[0-9]*-[0-9]*_//" | sed "s/\.md//"

    exit -1
fi


TITLE="$1"
CURR_DATE=$(date +'%Y-%m-%d')

LOGFILE_PATTERN="$LOG_DIR/*_${TITLE}.md"

if [ ! -f $LOGFILE_PATTERN ]; then
    echo "no file $LOGFILE_PATTERN"
    LOGFILE_NAME="$LOG_DIR/${CURR_DATE}_${TITLE}.md"
    echo "New log entry '$TITLE'"
    read -p "Project code? " PROJECT_CODE
    read -p "Tags? (csv) " TAGS

    echo "---" > $LOGFILE_NAME
    echo "title: $TITLE" >> $LOGFILE_NAME
    echo "date: $CURR_DATE" >> $LOGFILE_NAME
    echo "author: $AUTHOR" >> $LOGFILE_NAME
    echo "project: $PROJECT_CODE" >> $LOGFILE_NAME
    echo "tags: $TAGS" >> $LOGFILE_NAME
    echo "---" >> $LOGFILE_NAME
    echo "" >> $LOGFILE_NAME
    echo "" >> $LOGFILE_NAME
fi

if [[ "$2" == "--cat" ]]; then
    cat + $LOGFILE_PATTERN
else
    vim + $LOGFILE_PATTERN
fi
